{"version":3,"sources":["Carousel.js","Modal.js","Details.js"],"names":["Carousel","state","photos","active","handleIndexClick","setState","Number","ev","target","dataset","index","value","map","photo","media","filter","Component","modalRoot","document","getElementById","Modal","props","el","createElement","appendChild","removeChild","children","petfinder","key","secret","LoadableContent","loader","loading","Details","showModal","toggleModal","pet","get","output","id","then","data","breed","Array","isArray","breeds","join","name","animal","location","contact","city","description","catch","console","log","err","myTitle"],"mappings":"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","file":"Details.7ffdf28f.map","sourceRoot":"../src","sourcesContent":["import React, { Component } from \"react\";\n\nclass Carousel extends Component {\n  state = {\n    photos: [],\n    active: 0\n  };\n\n  // This can be done once and then not have to\n  // be worried about in the future\n  // As props change we can keep re-doing it\n  // This not change very frequently\n  // This(filter) could be done in the render method\n  // but it ends up being more complicated over time\n  static getDerivedStateFromProps({ media }) {\n    let photos = [];\n    if (media && media.photos && media.photos.photo) {\n      photos = media.photos.photo.filter(photo => photo[\"@size\"] === \"pn\");\n    }\n\n    return { photos };\n  }\n\n  handleIndexClick = ev => {\n    this.setState({\n      active: Number(ev.target.dataset.index)\n    });\n  };\n\n  render() {\n    const { photos, active } = this.state;\n    return (\n      <div className=\"carousel\">\n        <img src={photos[active].value} alt=\"primary animal\" />\n        <div className=\"carousel-smaller\">\n          {photos.map((photo, index) => (\n            /*eslint-disable-next-line*/\n            <img\n              key={photo.value}\n              data-index={index}\n              src={photo.value}\n              className={index === active ? \"active\" : \"\"}\n              alt=\"animal thumbnail\"\n              onClick={this.handleIndexClick}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nconst modalRoot = document.getElementById(\"modal\");\n\nclass Modal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.el = document.createElement(\"div\");\n  }\n\n  componentDidMount() {\n    modalRoot.appendChild(this.el);\n  }\n\n  componentWillUnmount() {\n    // This method is almost always for clearing memory\n    // removing event listeners, removing extraneous document stuff,\n    // anything that's gonna leak memory\n    modalRoot.removeChild(this.el);\n  }\n\n  render() {\n    return createPortal(this.props.children, this.el);\n  }\n}\n\nexport default Modal;\n","import React, { Component } from \"react\";\nimport pf from \"petfinder-client\";\nimport Loadable from \"react-loadable\";\nimport { navigate } from \"@reach/router\";\nimport Carousel from \"./Carousel\";\nimport Modal from \"./Modal\";\n\nconst petfinder = pf({\n  key: process.env.API_KEY,\n  secret: process.env.API_SECRET\n});\n\nconst LoadableContent = Loadable({\n  loader: () => import(\"./AdpotModalContent\"),\n  loading() {\n    return <h1> Loading content... </h1>;\n  }\n});\n\nclass Details extends Component {\n  state = {\n    loading: true,\n    showModal: false\n  };\n\n  toggleModal = () => this.setState({ showModal: !this.state.showModal });\n\n  componentDidMount() {\n    petfinder.pet\n      .get({\n        output: \"full\",\n        id: this.props.id\n      })\n      .then(data => {\n        const pet = data.petfinder.pet;\n        let breed;\n        if (Array.isArray(pet.breeds.breed)) {\n          breed = pet.breeds.breed.join(\", \");\n        } else {\n          breed = pet.breeds.breed;\n        }\n\n        this.setState({\n          name: pet.name,\n          animal: pet.animal,\n          location: `${pet.contact.city}, ${pet.contact.state}`,\n          description: pet.description,\n          media: pet.media,\n          breed,\n          loading: false\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        navigate(\"/\");\n      });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <h1>Loading...</h1>;\n    }\n\n    const {\n      name,\n      animal,\n      breed,\n      location,\n      description,\n      media,\n      showModal\n    } = this.state;\n\n    return (\n      <div className=\"details\">\n        <Carousel media={media} />\n        <div>\n          <h1\n            ref={el => {\n              this.myTitle = el;\n            }}\n          >\n            {name}\n          </h1>\n          <h2>\n            {animal} - {breed} - {location}\n          </h2>\n          <button onClick={this.toggleModal}>Adpot {name}</button>\n          <p>{description}</p>\n          {showModal\n            ? <Modal>\n                <LoadableContent toggleModal={this.toggleModal} name={name} />\n              </Modal>\n            : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Details;\n"]}