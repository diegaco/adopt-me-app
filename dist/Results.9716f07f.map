{"version":3,"sources":["Pet.js","Results.js"],"names":["Pet","props","name","animal","breed","media","location","id","photos","photo","filter","hero","value","Component","petfinder","key","secret","Results","_isMounted","search","pet","find","output","searchParams","then","pets","data","Array","isArray","setState","state","console","log","map","breeds","join","contact","city","ResultsWithContext","context","mapStateToProps"],"mappings":"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","file":"Results.9716f07f.map","sourceRoot":"../src","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"@reach/router\";\n\nclass Pet extends Component {\n  render() {\n    const { name, animal, breed, media, location, id } = this.props;\n\n    let photos = [];\n    if (media && media.photos && media.photos.photo) {\n      photos = media.photos.photo.filter(photo => photo[\"@size\"] === \"pn\");\n    }\n\n    const hero = photos[0] ? photos[0].value : `http://placecorgi.com/300/300`;\n\n    return (\n      <Link to={`/details/${id}`} className=\"pet\">\n        <div className=\"image-container\">\n          <img src={hero} alt={name} />\n        </div>\n        <div className=\"info\">\n          <h1>{name}</h1>\n          <h2>\n            {animal} - {breed} - {location}\n          </h2>\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default Pet;\n","import React, { Component } from \"react\";\nimport pf from \"petfinder-client\";\nimport { Consumer } from \"./SearchContext\";\nimport Pet from \"./Pet\";\nimport SearchBox from \"./SearchBox\";\nimport { connect } from \"react-redux\";\n\nconst petfinder = pf({\n  key: process.env.API_KEY,\n  secret: process.env.API_SECRET\n});\n\nclass Results extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pets: []\n    };\n    console.log(props);\n  }\n\n  _isMounted = false;\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.search();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  search = () => {\n    petfinder.pet\n      .find({\n        output: \"full\",\n        location: this.props.location,\n        animal: this.props.searchParams.animal,\n        breed: this.props.searchParams.breed\n      })\n      .then(data => {\n        let pets;\n        if (data.petfinder.pets && data.petfinder.pets.pet) {\n          if (Array.isArray(data.petfinder.pets.pet)) {\n            pets = data.petfinder.pets.pet;\n          } else {\n            pets = [data.petfinder.pets.pet];\n          }\n        } else {\n          pets = [];\n        }\n\n        if (this._isMounted) {\n          this.setState({\n            pets: pets\n          });\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"search\">\n        <SearchBox search={this.search} />\n        {this.state.pets.map(pet => {\n          let breed;\n          if (Array.isArray(pet.breeds.breed)) {\n            breed = pet.breeds.breed.join(\", \");\n          } else {\n            breed = pet.breeds.breed;\n          }\n          return (\n            <Pet\n              key={pet.id}\n              name={pet.name}\n              animal={pet.animal}\n              breed={breed}\n              media={pet.media}\n              location={`${pet.contact.city}, ${pet.contact.state}`}\n              id={pet.id}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nfunction ResultsWithContext(props) {\n  return (\n    <Consumer>\n      {context => <Results {...props} searchParams={context} />}\n    </Consumer>\n  );\n}\n\nconst mapStateToProps = ({ location }) => ({\n  location\n});\n\nexport default connect(mapStateToProps)(ResultsWithContext);\n"]}