{"version":3,"sources":["Pet.js","Results.js"],"names":["Pet","props","name","animal","breed","media","location","id","photos","photo","filter","hero","value","Component","petfinder","key","secret","Results","_isMounted","search","pet","find","output","then","pets","data","Array","isArray","setState","state","map","breeds","join","contact","city","mapStateToProps"],"mappings":"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","file":"Results.9716f07f.map","sourceRoot":"../src","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"@reach/router\";\n\nclass Pet extends Component {\n  render() {\n    const { name, animal, breed, media, location, id } = this.props;\n\n    let photos = [];\n    if (media && media.photos && media.photos.photo) {\n      photos = media.photos.photo.filter(photo => photo[\"@size\"] === \"pn\");\n    }\n\n    const hero = photos[0] ? photos[0].value : `http://placecorgi.com/300/300`;\n\n    return (\n      <Link to={`/details/${id}`} className=\"pet\">\n        <div className=\"image-container\">\n          <img src={hero} alt={name} />\n        </div>\n        <div className=\"info\">\n          <h1>{name}</h1>\n          <h2>\n            {animal} - {breed} - {location}\n          </h2>\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default Pet;\n","import React, { Component } from \"react\";\nimport pf from \"petfinder-client\";\nimport Pet from \"./Pet\";\nimport SearchBox from \"./SearchBox\";\nimport { connect } from \"react-redux\";\n\nconst petfinder = pf({\n  key: process.env.API_KEY,\n  secret: process.env.API_SECRET\n});\n\nclass Results extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pets: []\n    };\n  }\n\n  _isMounted = false;\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.search();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  search = () => {\n    petfinder.pet\n      .find({\n        output: \"full\",\n        location: this.props.location,\n        animal: this.props.animal,\n        breed: this.props.breed\n      })\n      .then(data => {\n        let pets;\n        if (data.petfinder.pets && data.petfinder.pets.pet) {\n          if (Array.isArray(data.petfinder.pets.pet)) {\n            pets = data.petfinder.pets.pet;\n          } else {\n            pets = [data.petfinder.pets.pet];\n          }\n        } else {\n          pets = [];\n        }\n\n        if (this._isMounted) {\n          this.setState({\n            pets: pets\n          });\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"search\">\n        <SearchBox search={this.search} />\n        {this.state.pets.map(pet => {\n          let breed;\n          if (Array.isArray(pet.breeds.breed)) {\n            breed = pet.breeds.breed.join(\", \");\n          } else {\n            breed = pet.breeds.breed;\n          }\n          return (\n            <Pet\n              key={pet.id}\n              name={pet.name}\n              animal={pet.animal}\n              breed={breed}\n              media={pet.media}\n              location={`${pet.contact.city}, ${pet.contact.state}`}\n              id={pet.id}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\n// this is comming from Redux store\nconst mapStateToProps = ({ location, breed, animal }) => ({\n  location,\n  breed,\n  animal\n});\n\n// here we passes redux store to Results as props\nexport default connect(mapStateToProps)(Results);\n"]}